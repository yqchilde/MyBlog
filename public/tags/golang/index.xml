<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Golang - 标签 - Yqchilde</title>
        <link>https://yqqy.top/tags/golang/</link>
        <description>Golang - 标签 - Yqchilde</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>yqchilde@gmail.com (Yqchilde)</managingEditor>
            <webMaster>yqchilde@gmail.com (Yqchilde)</webMaster><lastBuildDate>Tue, 19 Apr 2022 17:29:34 &#43;0800</lastBuildDate><atom:link href="https://yqqy.top/tags/golang/" rel="self" type="application/rss+xml" /><item>
    <title>在算能盒子 (BMNN) 上使用gocv</title>
    <link>https://yqqy.top/sophon-linaro-opencv-gocv/</link>
    <pubDate>Tue, 19 Apr 2022 17:29:34 &#43;0800</pubDate><author>
        <name>Yqchilde</name>
    </author><guid>https://yqqy.top/sophon-linaro-opencv-gocv/</guid>
    <description><![CDATA[本文记录了在算能盒子 (BMNN) 上使用gocv的过程，本文将描述使用期间走过的坑，以及如何解决这些坑。]]></description>
</item><item>
    <title>go mod 添加 gitlab 私有仓库</title>
    <link>https://yqqy.top/go-mod-private-repo/</link>
    <pubDate>Sun, 17 Apr 2022 22:38:34 &#43;0800</pubDate><author>
        <name>Yqchilde</name>
    </author><guid>https://yqqy.top/go-mod-private-repo/</guid>
    <description><![CDATA[本篇记载了如何添加 gitlab 私有仓库到 go mod 中使用，并且可以使用 go get 命令获取到私有仓库的依赖。]]></description>
</item><item>
    <title>在Ubuntu上安装指定版本的Go语言</title>
    <link>https://yqqy.top/ubuntu-install-golang/</link>
    <pubDate>Mon, 29 Nov 2021 10:25:30 &#43;0800</pubDate><author>
        <name>作者</name>
    </author><guid>https://yqqy.top/ubuntu-install-golang/</guid>
    <description><![CDATA[在ubuntu系统上直接使用apt-get下载下来的go版本是1.10.4，相对比较久远，本文记载如何安装指定版本的go]]></description>
</item><item>
    <title>判断一个点是否在多边形中-Golang实现</title>
    <link>https://yqqy.top/point-in-polygon-for-golang/</link>
    <pubDate>Thu, 25 Nov 2021 08:34:13 &#43;0800</pubDate><author>
        <name>作者</name>
    </author><guid>https://yqqy.top/point-in-polygon-for-golang/</guid>
    <description><![CDATA[这是一道数字几何题，可以应用的领域有很多，比如GIS服务、区域服务等]]></description>
</item><item>
    <title>Golang交叉编译Makefile，通过Github release版本检测覆盖更新</title>
    <link>https://yqqy.top/golang-makefile-and-additional/</link>
    <pubDate>Wed, 21 Apr 2021 22:44:20 &#43;0800</pubDate><author>
        <name>作者</name>
    </author><guid>https://yqqy.top/golang-makefile-and-additional/</guid>
    <description><![CDATA[本文记载如何编写一个简单的适用于Golang交叉编译的Makefile，并且记载了在编译时如何通过动态注入变量来给二进制文件增加版本号，同时利用github releases进行版本更新检测、覆盖更新等。]]></description>
</item><item>
    <title>Go的template模板关于range换行和crontab的简单正则表达式</title>
    <link>https://yqqy.top/template-range-crontab-regex/</link>
    <pubDate>Sun, 04 Apr 2021 17:39:04 &#43;0800</pubDate><author>
        <name>作者</name>
    </author><guid>https://yqqy.top/template-range-crontab-regex/</guid>
    <description><![CDATA[1. 在使用Go的Template时，在end后下方出现了一行空白的坑，很影响强迫症心情。<br>2. 记录一个简单的crontab正则表达式如何编写。]]></description>
</item><item>
    <title>Golang中的Race检测</title>
    <link>https://yqqy.top/golang-race/</link>
    <pubDate>Mon, 11 Jan 2021 23:43:21 &#43;0800</pubDate><author>
        <name>作者</name>
    </author><guid>https://yqqy.top/golang-race/</guid>
    <description><![CDATA[很多时候，当我们写出一个程序时，我们并不知道这个程序在并发情况下会不会出现什么问题。所以在本质上说，goroutine的使用增加了函数的危险系数。比如一个全局变量，如果没有加上锁，我们写一个比较庞大的项目下来，根本不知道这个变量是不是会引起多个goroutine竞争，race参数就是提前帮我们检查是否存在竞争。]]></description>
</item><item>
    <title>Zinx学习之消息封装模块</title>
    <link>https://yqqy.top/zinx-frame-v5/</link>
    <pubDate>Sat, 02 Jan 2021 23:21:30 &#43;0800</pubDate><author>
        <name>作者</name>
    </author><guid>https://yqqy.top/zinx-frame-v5/</guid>
    <description><![CDATA[Zinx是一个轻量级TCP服务框架，会跟着课程开始做一些笔记，消息封装模块是将消息细化，以达到将消息表达具体化的目的。]]></description>
</item><item>
    <title>Zinx学习之全局配置模块</title>
    <link>https://yqqy.top/zinx-frame-v4/</link>
    <pubDate>Sat, 02 Jan 2021 23:20:30 &#43;0800</pubDate><author>
        <name>作者</name>
    </author><guid>https://yqqy.top/zinx-frame-v4/</guid>
    <description><![CDATA[Zinx是一个轻量级TCP服务框架，会跟着课程开始做一些笔记，全局配置模块主要是配置了服务启动和运行中的一些参数。]]></description>
</item><item>
    <title>Zinx学习之Router模块</title>
    <link>https://yqqy.top/zinx-frame-v3/</link>
    <pubDate>Sun, 27 Dec 2020 21:00:29 &#43;0800</pubDate><author>
        <name>作者</name>
    </author><guid>https://yqqy.top/zinx-frame-v3/</guid>
    <description><![CDATA[Zinx是一个轻量级TCP服务框架，会跟着课程开始做一些笔记，Router模块主要封装了Request接口和Router接口，用于实现通过路由请求数据，并且通过路由调用链接功能，v3是单路由模式。]]></description>
</item></channel>
</rss>
